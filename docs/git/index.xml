<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Universal</title>
    <link>https://goliot.github.io/teamWebPage/git/</link>
    <description>Recent content in Git on Universal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Aug 2021 21:29:20 +0200</lastBuildDate><atom:link href="https://goliot.github.io/teamWebPage/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Github Post</title>
      <link>https://goliot.github.io/teamWebPage/git/github_post/</link>
      <pubDate>Sun, 01 Aug 2021 21:29:20 +0200</pubDate>
      
      <guid>https://goliot.github.io/teamWebPage/git/github_post/</guid>
      <description>github란?  코드 저장소를 호스팅하고 관리하기 위한 웹 기반 플랫폼으로, 다양한 개발자들이 협업하고 소스 코드를 공유하는 데 사용된다. git을 기반으로 한 원격 저장소 호스팅 서비스 https://github.com 계정을 만들고 사용 무료, 유상 서비스 문서 : https://docs.github.com/ko 스킬 : https://skills.github.com/  보안 설정  “2FA”(투팩터 인증)을 설정  https://docs.github.com/ko/authentication/securing-your-account-with-two-factor-authentication-2fa/about-twofactor-authentication 보안 강화(권장됨)   ssh key 생성과 계정에 추가  github는 패스워드 입력을 이용한 저장소 사용이 금지됨, ssh key를 사용해야 함 https://docs.github.com/ko/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-addingit-to-the-ssh-agent https://docs.github.com/ko/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-githubaccount     github 주요 개념 Remote Repository  원격 저장소는 코드 및 프로젝트 파일을 저장하고 관리하는 공간입니다.</description>
    </item>
    
    <item>
      <title>Git Post</title>
      <link>https://goliot.github.io/teamWebPage/git/git_post/</link>
      <pubDate>Wed, 24 Jun 2015 13:50:46 +0200</pubDate>
      
      <guid>https://goliot.github.io/teamWebPage/git/git_post/</guid>
      <description>소스 관리 소스 상태  관리 대상 여부  tracked(추적대상)  관리 대상     untracked(추적대상 아님)  관리 대상 아님   확인  git status    관리 대상 상태  committed : 버전관리에 안전하게 저장됨, snapshot staged : 커밋할 대상이라고 표시된 상태 modified : 파일이 수정되었지만 staged 되지 않음 tracked인 파일은 변경을 감지함 untracked인 파일은 변경을 감지하지 않음 untracked인 파일이 새로 생긴 것은 감지함  관리 대상으로 만들기  git add &amp;lt;file 또는 디렉토리&amp;gt;  untracked 파일을 tracked로 변경 동시에 staged로 변경 이미 tracked이고 modified인 경우 staged로 변경 디렉토리를 지정한 경우 하위의 모든 파일까지 변경    소스 관리에서 제외 하기  git add dir : dir과 하위 디렉토리에 있는 모든 파일들이 stage됨, .</description>
    </item>
    
  </channel>
</rss>
