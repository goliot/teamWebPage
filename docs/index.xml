<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Universal</title>
    <link>https://goliot.github.io/teamWebPage/</link>
    <description>Recent content on Universal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 May 2023 21:29:20 +0200</lastBuildDate><atom:link href="https://goliot.github.io/teamWebPage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>컨테이너란 무엇인가?</title>
      <link>https://goliot.github.io/teamWebPage/container/categories-post/</link>
      <pubDate>Tue, 23 May 2023 21:29:20 +0200</pubDate>
      
      <guid>https://goliot.github.io/teamWebPage/container/categories-post/</guid>
      <description>컨테이너 컨테이너는 한 컴퓨팅 환경에서 다른 컴퓨팅 환경으로 빠르고 안정적으로 애플리케이션을 실행할 수 있도록 코드와 모든 종속성을 패키지화하는 소프트웨어의 표준 단위입니다.
• OS 커널을 여러 개의 격리된 공간으로 격리(Isolation)하여 독립적인 여러 개의 시스템처럼 사용하는 가상화
• 호스트 OS의 커널을 공유하며 OS를 새로 설치하지 않음
• 커널을 공유하는 방식이기 때문에 실행 속도가 빠르고, 성능 상의 손실이 거의 없음
• 사용자에게는 가상 머신처럼 보임
• 다른 OS를 사용할 수 없음
Docker 컨테이너 중에 잘 알려져 있는 컨테이너는 Docker 입니다.</description>
    </item>
    
    <item>
      <title>도커 사용법</title>
      <link>https://goliot.github.io/teamWebPage/container/creating-a-new-theme/</link>
      <pubDate>Tue, 23 May 2023 13:50:46 +0200</pubDate>
      
      <guid>https://goliot.github.io/teamWebPage/container/creating-a-new-theme/</guid>
      <description>Docekr 다운로드 및 실행   도커 다운로드 사이트 접속 (URL : https://www.docker.com/products/docker-desktop)
  자신의 OS에 맞는 다운로드 설정 선택 후 다운로드
  Docker 실행
  Docker Image 다운로드 방법   도커 허브에 접속 (URL : https://hub.docker.com)
  필요한 도커 이미지 검색
  검색 결과 중 원하는 이미지를 선택하고 태그를 선택 (태그는 이미지 파일의 버전과 같은 역할을 함)
  도커 이미지를 PULL 하여 이미지 저장</description>
    </item>
    
    <item>
      <title>Linux Commands</title>
      <link>https://goliot.github.io/teamWebPage/linux/go-is-for-lovers/</link>
      <pubDate>Tue, 23 May 2023 13:47:08 +0200</pubDate>
      
      <guid>https://goliot.github.io/teamWebPage/linux/go-is-for-lovers/</guid>
      <description>리눅스 명령어 가이드 cd cd 명령어는 현재 작업 디렉토리를 변경하는데 사용됩니다.
옵션  cd [디렉토리]: 지정한 디렉토리로 이동합니다.  예시  cd /home/user: &amp;ldquo;/home/user&amp;rdquo; 디렉토리로 이동합니다. cd ..: 상위 디렉토리로 이동합니다.  ls ls 명령어는 디렉토리의 내용을 나열하는데 사용됩니다.
옵션  ls: 현재 디렉토리의 내용을 나열합니다. ls [디렉토리]: 지정한 디렉토리의 내용을 나열합니다. ls -l: 자세한 내용과 함께 나열합니다.  예시  ls: 현재 디렉토리의 파일과 폴더를 나열합니다. ls /home/user: &amp;ldquo;/home/user&amp;rdquo; 디렉토리의 파일과 폴더를 나열합니다.</description>
    </item>
    
    <item>
      <title>Github Post</title>
      <link>https://goliot.github.io/teamWebPage/git/github_post/</link>
      <pubDate>Sun, 01 Aug 2021 21:29:20 +0200</pubDate>
      
      <guid>https://goliot.github.io/teamWebPage/git/github_post/</guid>
      <description>github란?  코드 저장소를 호스팅하고 관리하기 위한 웹 기반 플랫폼으로, 다양한 개발자들이 협업하고 소스 코드를 공유하는 데 사용된다. git을 기반으로 한 원격 저장소 호스팅 서비스 https://github.com 계정을 만들고 사용 무료, 유상 서비스 문서 : https://docs.github.com/ko 스킬 : https://skills.github.com/  보안 설정  “2FA”(투팩터 인증)을 설정  https://docs.github.com/ko/authentication/securing-your-account-with-two-factor-authentication-2fa/about-twofactor-authentication 보안 강화(권장됨)   ssh key 생성과 계정에 추가  github는 패스워드 입력을 이용한 저장소 사용이 금지됨, ssh key를 사용해야 함 https://docs.github.com/ko/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-addingit-to-the-ssh-agent https://docs.github.com/ko/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-githubaccount     github 주요 개념 Remote Repository  원격 저장소는 코드 및 프로젝트 파일을 저장하고 관리하는 공간입니다.</description>
    </item>
    
    <item>
      <title>Web 개요</title>
      <link>https://goliot.github.io/teamWebPage/web/web/</link>
      <pubDate>Sun, 01 Aug 2021 21:29:20 +0200</pubDate>
      
      <guid>https://goliot.github.io/teamWebPage/web/web/</guid>
      <description>Web 개요  인터넷(Internet)  컴퓨터로 연결하여 TCP/IP(Transmission Control Protocol/Internet Protocol)라는통신 프로토콜을 이용해 정보를주고받는 컴퓨터 네트워크 네트워크와 네트워크를 연결해 주는 네트워크  월드 와이드 웹(World Wide Web, WWW, W3)  인터넷에 연결된 컴퓨터를 통해 사람들이 정보를 공유할 수 있는 전 세계적인 정보 공간(위키백과) • 인터넷에서 HTTP 프로토콜, 하이퍼텍스트, HTML형식 등을 사용하여 그림과 문자를 교환하는 전송방식• HTTP(HyperText Transfer Protocol) : 클라이언트와 서버 사이에 이루어지는 요청/응답(request/response) 프로토콜• 하이퍼텍스트(Hypertext) : 참조(하이퍼링크)를 통해 독자가 한 문서에서 다른 문서로 즉시 접근할 수 있는텍스트, 하이퍼링크를 따라 다른 문서로 이동, HTML 문서라고도 함 하이퍼 텍스트 마크업 언어(Hyper Text Markup Language, HTML) : 제목, 단락, 목록 등과 같은 본문을 위한 구조적 의미를나타내는 것뿐만 아니라 링크, 인용과 그 밖의 항목으로 구조적 문서를 만들 수 있는 방법을 제공  Web(WWW)  웹은 인터넷이라는 물리적 네트워크를 기반으로 함 인터넷 상에 TCP/IP라는 네트워크 전송 계층의 프로토콜을 사용 TCP/IP 네트워크 전송 계층위에 HTTP라는 네트워크 응용계층 프로토콜을 사용• HTTP 프로토콜을 이용해 HTML이라는 마크업 언어로 작성된 하이퍼 텍스트 데이터를 전송Web Server(정적) 하이퍼 텍스트 파일등의 웹 페이지 구성 파일들을 제공(Publish)하는 서버 프로그램• HTTP 서버라고도 하며 다양한 제품들이 있음 Apache, nginx  (Web) Application Server(WAS, AS)(동적)  서버에서 프로그램이 실행되고 그 결과로 HTML 파일을 생성하여 제공하는 서버 프로그램• 주로 Database에서 데이터를 조회하고, 결과를 HTML에 표현하는 기능을 많이 함• JAVA : Weblogic, Apache Tomcat C# : IIS PHP : PHP JavaScript : Node.</description>
    </item>
    
    <item>
      <title>Git Post</title>
      <link>https://goliot.github.io/teamWebPage/git/git_post/</link>
      <pubDate>Wed, 24 Jun 2015 13:50:46 +0200</pubDate>
      
      <guid>https://goliot.github.io/teamWebPage/git/git_post/</guid>
      <description>소스 관리 소스 상태  관리 대상 여부  tracked(추적대상)  관리 대상     untracked(추적대상 아님)  관리 대상 아님   확인  git status    관리 대상 상태  committed : 버전관리에 안전하게 저장됨, snapshot staged : 커밋할 대상이라고 표시된 상태 modified : 파일이 수정되었지만 staged 되지 않음 tracked인 파일은 변경을 감지함 untracked인 파일은 변경을 감지하지 않음 untracked인 파일이 새로 생긴 것은 감지함  관리 대상으로 만들기  git add &amp;lt;file 또는 디렉토리&amp;gt;  untracked 파일을 tracked로 변경 동시에 staged로 변경 이미 tracked이고 modified인 경우 staged로 변경 디렉토리를 지정한 경우 하위의 모든 파일까지 변경    소스 관리에서 제외 하기  git add dir : dir과 하위 디렉토리에 있는 모든 파일들이 stage됨, .</description>
    </item>
    
    <item>
      <title>Web Browser</title>
      <link>https://goliot.github.io/teamWebPage/web/web_browser/</link>
      <pubDate>Wed, 24 Jun 2015 13:50:46 +0200</pubDate>
      
      <guid>https://goliot.github.io/teamWebPage/web/web_browser/</guid>
      <description>Web Browser  웹 브라우저  하이퍼 텍스트 문서(HTML 문서)를 렌더링하여 GUI로 보여주는 웹 클라이언트 프로그램• 주요기능 웹서버에게 주어진 URL의 웹페이지(하이퍼 텍스트)를 요청 웹페이지를 다운로드 받아서 그래픽으로 렌더링 자바스크립트(ECMAScript 표준 준수) 인터프리터로 자바스크립트 실행 멀티 미디어 표시 : 이미지, 음악, 동영상  </description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://goliot.github.io/teamWebPage/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://goliot.github.io/teamWebPage/contact/</guid>
      <description>We are here to help you Are you curious about something? Do you have some kind of problem with our products? As am hastily invited settled at limited civilly fortune me. Really spring in extent an by. Judge but built gay party world. Of so am he remember although required. Bachelor unpacked be advanced at. Confined in declared marianne is vicinity.
Please feel free to contact us, our customer service center is working for you 24/7.</description>
    </item>
    
    <item>
      <title>FAQ</title>
      <link>https://goliot.github.io/teamWebPage/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://goliot.github.io/teamWebPage/faq/</guid>
      <description>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.
1. WHAT TO DO IF I HAVE STILL NOT RECEIVED THE ORDER? Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante.</description>
    </item>
    
    <item>
      <title>리눅스 개요</title>
      <link>https://goliot.github.io/teamWebPage/linux/categories-post/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://goliot.github.io/teamWebPage/linux/categories-post/</guid>
      <description>categories = [&amp;quot;programming&amp;quot;,&amp;quot;linux&amp;quot;,&amp;quot;OSS&amp;quot;]  리눅스 개념 리눅스란? - 오픈소스 운영체제로, 컴퓨터 시스템에서 소프트웨어와 하드웨어를 연결해 주는 소프트웨어 계층이다 - 리눅스는 1991년 리누스 토발즈(Linus Torvalds) 가 개발하였으며 그의 이름 리누스와 UNIX를 합쳐 만든것. - 리눅스는 커널, 라이브러리, 유틸리티와 User Interface 로 구성되어 있다 - 커널(kernel) 은 운영체제의 핵심이며 하드웨어 자원을 관리하고 실행하게 함. 다음은 커널의 핵심 기능 4가지이다. 1. 메모리관리 2. 프로세스 관리 3. 장치 드라이버 4. 시스템 호출 및 보안 - 리눅스는 Multi-tasking, Multiuser, 단일형 커널이다 - 리눅스는 다중 사용자 환경을 지원하기 때문에 여러 사용자가 동시에 시스템에 접속하여 작업이 가능하다 - 또한 리눅스는 안정성과 보안성이 뛰어나 서버 운영체제로 널리 사용된다.</description>
    </item>
    
  </channel>
</rss>
